// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/NethermindEth/juno/clients (interfaces: GatewayInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	json "encoding/json"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockGatewayInterface is a mock of GatewayInterface interface.
type MockGatewayInterface struct {
	ctrl     *gomock.Controller
	recorder *MockGatewayInterfaceMockRecorder
}

// MockGatewayInterfaceMockRecorder is the mock recorder for MockGatewayInterface.
type MockGatewayInterfaceMockRecorder struct {
	mock *MockGatewayInterface
}

// NewMockGatewayInterface creates a new mock instance.
func NewMockGatewayInterface(ctrl *gomock.Controller) *MockGatewayInterface {
	mock := &MockGatewayInterface{ctrl: ctrl}
	mock.recorder = &MockGatewayInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGatewayInterface) EXPECT() *MockGatewayInterfaceMockRecorder {
	return m.recorder
}

// AddTransaction mocks base method.
func (m *MockGatewayInterface) AddTransaction(arg0 json.RawMessage) (json.RawMessage, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddTransaction", arg0)
	ret0, _ := ret[0].(json.RawMessage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddTransaction indicates an expected call of AddTransaction.
func (mr *MockGatewayInterfaceMockRecorder) AddTransaction(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddTransaction", reflect.TypeOf((*MockGatewayInterface)(nil).AddTransaction), arg0)
}
